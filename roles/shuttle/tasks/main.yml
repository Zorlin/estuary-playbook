---
- name: Install main dependencies
  ansible.builtin.package:
    name:
      - wget
      - jq
      - hwloc
      - ocl-icd-opencl-dev
      - git
      - libhwloc-dev
      - pkg-config
    state: present
  when: ansible_distribution == "Ubuntu" or ansible_distribution == "Debian"

- name: Check out Estuary from git
  ansible.builtin.git:
    repo: https://github.com/application-research/estuary
    dest: /usr/src/estuary

- name: Compile Estuary
  shell:
    # We force golang and bashrc to load, otherwise Rust and Go won't work.
    cmd: source /etc/profile.d/golang.sh ; source /root/.cargo/env ; RUSTFLAGS="-C target-cpu=native -g" FFI_BUILD_FROM_SOURCE=1 make all
    creates: /usr/src/estuary/estuary
    chdir: /usr/src/estuary
    executable: /bin/bash

- name: Ensure estuary private directory
  ansible.builtin.file:
    path: /usr/estuary/private
    owner: root
    group: root
    mode: 0700
    state: directory
    recurse: true

- name: Install Estuary token
  copy:
    src: secrets/token
    dest: /usr/estuary/private/token
    owner: root
    group: root
    mode: 0700

- name: Generate a shuttle token
  ansible.builtin.shell:
    cmd: 'curl -H "Authorization: Bearer $(cat /usr/estuary/private/token)" -X POST http://estuary-main.windowpa.in:3004/admin/shuttle/init > /usr/estuary/private/shuttle_token'
    executable: /bin/bash
    creates: /usr/estuary/private/shuttle_token

- name: Extract shuttle token actual
  ansible.builtin.shell:
    cmd: "cat /usr/estuary/private/shuttle_token jq -r '.handle' > /usr/estuary/private/shuttle_token_handle"
    executable: /bin/bash
    creates: /usr/estuary/private/shuttle_token_handle

- name: Extract shuttle token actual
  ansible.builtin.shell:
    cmd: "cat /usr/estuary/private/shuttle_token jq -r '.token' > /usr/estuary/private/shuttle_token_actual"
    executable: /bin/bash
    creates: /usr/estuary/private/shuttle_token_actual